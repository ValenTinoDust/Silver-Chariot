{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {DMChannel, Message, MessageButton, MessageEmbed, TextChannel,} from \"discord.js\";\nimport {ButtonOption} from \"./types/ButtonOption\";\n\nconst availableEmojis = [\"⏮️\", \"◀️\", \"⏹️\", \"▶️\", \"⏭️\"];\n\nclass Pagination {\n    private message?: Message;\n    private readonly channel: TextChannel | DMChannel;\n    private readonly pages: MessageEmbed[];\n    private index = 0;\n\n    /**\n     *\n     * @param {TextChannel | DMChannel} channel - The target channel\n     * @param {MessageEmbed[]} pages - Embed pages\n     * @param {string} [footerText] - Optional footer text, will show `Text 1 of 5` if you pass `Text`, for example\n     * @param {number} timeout - How long button need to be active\n     * @param {ButtonOption[]} options - optional options for the buttons\n     */\n    constructor(\n        channel: TextChannel | DMChannel,\n        pages: MessageEmbed[],\n        private readonly footerText = \"Page\",\n        private readonly timeout?: number,\n        private readonly options ?: ButtonOption[]\n    ) {\n        if (options && options.length > 5) {\n            throw new TypeError(\"You have passed more than 5 buttons as options\")\n        } else if (options && options.length < 4) {\n            throw new TypeError(\"You have passed less than 5 buttons as options\")\n        }\n        this.channel = channel;\n        this.pages = pages.map((page, pageIndex) => {\n            if (page.footer && (page.footer.text || page.footer.iconURL)) return page;\n            return page.setFooter({\n                text: `${footerText} ${pageIndex + 1} of ${pages.length}`\n            });\n        });\n    }\n\n    /**\n     * Starts the pagination\n     */\n    async paginate(): Promise<void> {\n        this.message = await this.channel.send({\n            embeds: [this.pages[this.index]],\n            components: [\n                {\n                    type: 1,\n                    components: this.options ? this.options.map((x, i) => {\n                        return new MessageButton(\n                            {\n                                emoji: x.emoji,\n                                style: x.style,\n                                type: 2,\n                                label: x.label,\n                                customId: availableEmojis[i]\n                            }\n                        )\n                    }) : [\n                        {\n                            type: 2,\n                            style: \"PRIMARY\",\n                            label: \"First\",\n                            emoji: \"⏮️\",\n                            customId: \"⏮️\"\n                        }, {\n                            type: 2,\n\n                            style: \"PRIMARY\",\n                            label: \"Prev\",\n                            emoji: \"◀️\",\n                            customId: \"◀️\"\n\n                        }, {\n                            type: 2,\n                            style: \"DANGER\",\n                            label: \"Stop\",\n                            emoji: \"⏹️\",\n                            customId: \"⏹️\"\n\n                        }, {\n                            type: 2,\n                            style: \"PRIMARY\",\n                            label: \"Next\",\n                            emoji: \"▶️\",\n                            customId: \"▶️\"\n                        }, {\n                            type: 2,\n                            style: \"PRIMARY\",\n                            label: \"Last\",\n                            emoji: \"⏭️\",\n                            customId: \"⏭️\"\n                        },\n\n                    ]\n                },\n            ],\n        });\n        if (this.pages.length < 2) {\n            return;\n        }\n        const interactionCollector =\n            this.message?.createMessageComponentCollector(\n                {\n                    max: this.pages.length * 5,\n                }\n            );\n        setTimeout(async () => {\n            interactionCollector?.stop(\"Timeout\");\n            await this?.message?.edit({\n                components: [],\n            });\n        }, this.timeout ? this.timeout : 60000)\n        interactionCollector.on(\"collect\", async (interaction) => {\n            const { customId } = interaction;\n            let newIndex =\n              customId === availableEmojis[0]\n                ? 0 // Start\n                : customId === availableEmojis[1]\n                ? this.index - 1 // Prev\n                : customId === availableEmojis[2]\n                ? NaN // Stop\n                : customId === availableEmojis[3]\n                ? this.index + 1 // Next\n                : customId === availableEmojis[4]\n                ? this.pages.length - 1 // End\n                : this.index;\n            if (isNaN(newIndex)) {\n              // Stop\n              interactionCollector.stop(\"stopped by user\");\n              await interaction.update({\n                components: [],\n              });\n            } else {\n              if (newIndex < 0) newIndex = 0;\n              if (newIndex >= this.pages.length)\n                  newIndex = this.pages.length - 1;\n              this.index = newIndex;\n              await interaction.update({\n                embeds: [this.pages[this.index]],\n              });\n            }\n        });\n        interactionCollector.on(\"end\", async () => {\n            await this?.message?.edit({\n                components: [],\n            });\n        });\n    }\n}\n\nexport {\n    ButtonOption,\n    Pagination\n}\n"]}